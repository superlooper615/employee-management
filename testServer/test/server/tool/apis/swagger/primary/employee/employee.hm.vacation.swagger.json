{
  "tags": [{
    "name": "employeeHasManyvacation",
    "description": "Everything about has many relation"
  }],
  "paths": {
    "/api/v1/employee/has/vacation": {
      "get": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Get employee list with vacation children",
        "description": "",
        "operationId": "employeeHasManyvacationList",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/employee/{employeeId}/vacation": {
      "get": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Find vacation list by parent employee id",
        "description": "Returns a single employee",
        "operationId": "getvacationByemployeeId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "employeeId",
            "in": "path",
            "description": "ID of employee to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": "object"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "employee not found"
          }
        }
      },
      "post": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Insert vacation under a parent employee",
        "description": "Returns a single employee",
        "operationId": "insertvacationByemployeeId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "body",
            "name": "body",
            "description": "vacation object to insert",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "ID of employee to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/employee/{employeeId}/vacation/{vacationId}": {
      "get": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Get by vacation id parent employee id",
        "description": "Returns a single employee",
        "operationId": "getvacationByIdAndemployeeId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "employeeId",
            "in": "path",
            "description": "ID of parent employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vacationId",
            "in": "path",
            "description": "ID of vacation",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Delete by vacation id parent employee id",
        "description": "Returns a single employee",
        "operationId": "deletevacationByIdAndemployeeId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "employeeId",
            "in": "path",
            "description": "ID of parent employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vacationId",
            "in": "path",
            "description": "ID of cvacation",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Update vacation under a parent employee",
        "description": "Returns a single employee",
        "operationId": "updatevacationByIdAndemployeeId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "body",
            "name": "body",
            "description": "vacation object to insert",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "ID of employee to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vacationId",
            "in": "path",
            "description": "ID of vacation",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/employee/{employeeId}/vacation/{vacationId}/exists": {
      "get": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Check row exists by vacation id and parent employee id",
        "description": "",
        "operationId": "existsvacationByIdAndemployeeId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "employeeId",
            "in": "path",
            "description": "ID of parent employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vacationId",
            "in": "path",
            "description": "ID of vacation",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/v1/employee/{employeeId}/vacation/findOne": {
      "get": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Find one vacation by parent employee id and filters",
        "description": "",
        "operationId": "findOnevacationByemployeeId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "employeeId",
            "in": "path",
            "description": "ID of parent employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields of model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/employee/{employeeId}/vacation/count": {
      "get": {
        "tags": [
          "employeeHasManyvacation"
        ],
        "summary": "Get vacation count by parent id and filter",
        "description": "",
        "operationId": "getCountWithinemployeeId",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "employeeId",
            "in": "path",
            "description": "ID of parent employee",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "sort parameter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {}
}